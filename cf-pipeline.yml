---
resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: cf-deployment-git-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: cf-deployment
    access_token: ((cf-deployment.github.access-token))

- name: runtime-configs
  type: git
  source:
    uri: ((runtime-configs.git.uri))
    private_key: ((runtime-configs.git.private-key))
    branch: master
    paths:
    - "runtime-configs"

- name: deployment-profiles
  type: git
  source:
    uri: ((deployment-profiles.git.uri))
    private_key: ((deployment-profiles.git.private-key))
    branch: master
    paths:
    - "deployment-profiles"

- name: cf-pipeline
  type: git
  source:
    uri: ((cf-pipeline.git-uri))
    branch: master
    ignore_paths:
    - "runtime-configs"

- name: stemcell-vsphere-xenial
  type: bosh-io-stemcell
  source:
    name: bosh-vsphere-esxi-ubuntu-xenial-go_agent

- name: slack-cf-pipeline
  type: slack-notification
  source:
    url: ((slack.cf-pipeline-webhook-url))

jobs:
- name: Upload vSphere Xenial Stemcell
  plan:
  - get: stemcell-vsphere-xenial
    trigger: true
  - task: Upload vSphere Xenial Stemcell
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: bosh/main-bosh-docker
      inputs:
      - name: stemcell-vsphere-xenial
      run:
        path: bash
        args: [-c, bosh upload-stemcell stemcell-vsphere-xenial/stemcell.tgz]
  - put: slack-cf-pipeline
    params:
      text: |
        A New version of the xenial stemcell for vpshere is available. Details available here : ((cf-pipeline.concourse-url))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: Notify cf-deployment release
  plan:
  - get: cf-deployment-git-release
    trigger: true
  - put: slack-cf-pipeline
    params:
      text: |
        A New version of cf-deployment is available. Details available here : ((cf-pipeline.concourse-url))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: Update Runtime Configs
  plan:
  - get: runtime-configs
    trigger: true
  - get: cf-pipeline
  - task: Update Runtime Configs
    file: cf-pipeline/tasks/bosh-apply-runtime-configs/bosh-apply-runtime-configs.yml
    params:
      BOSH_ENVIRONMENT: ((bosh.environment))
      BOSH_CA_CERT: ((bosh.ca-cert))
      BOSH_CLIENT: ((bosh.client))
      BOSH_CLIENT_SECRET: ((bosh.client-secret))

- name: Deploy Cloud Foundry
  plan:
  - get: cf-pipeline
  - get: deployment-profiles
  - get: cf-deployment-git-release
    params:
      include_source_tarball: true
  - task: Unpack cf-deployment
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: bosh/main-bosh-docker
      inputs:
      - name: cf-deployment-git-release
      outputs: 
      - name: cf-deployment-release
      run:
        path: bash
        args: [-c, tar -xvf cf-deployment-git-release/source.tar.gz -C cf-deployment-release --strip-components=1 --strip 1]
  - task: Deploy Cloud Foundry with Bosh
    file: cf-pipeline/tasks/bosh-deploy/bosh-deploy.yml
    params:
      BOSH_ENVIRONMENT: ((bosh.environment))
      BOSH_CA_CERT: ((bosh.ca-cert))
      BOSH_CLIENT: ((bosh.client))
      BOSH_CLIENT_SECRET: ((bosh.client-secret))
      DEPLOYMENT_NAME: cf
      DEPLOYMENT_FILE: cf-deployment-release/cf-deployment.yml
      DEPLOYMENT_PROFILE: deployment-profiles/deployment-profiles/cf-daniellavoie.bosh